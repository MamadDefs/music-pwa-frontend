{"ast":null,"code":"/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\r\n * Adds an `activate` event listener which will clean up incompatible\r\n * precaches that were created by older versions of Workbox.\r\n *\r\n * @memberof workbox-precaching\r\n */\nfunction cleanupOutdatedCaches() {\n  // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n  self.addEventListener('activate', function (event) {\n    var cacheName = cacheNames.getPrecacheName();\n    event.waitUntil(deleteOutdatedCaches(cacheName).then(function (cachesDeleted) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (cachesDeleted.length > 0) {\n          logger.log(\"The following out-of-date precaches were cleaned up \" + \"automatically:\", cachesDeleted);\n        }\n      }\n    }));\n  });\n}\nexport { cleanupOutdatedCaches };","map":{"version":3,"names":["cacheNames","logger","deleteOutdatedCaches","cleanupOutdatedCaches","self","addEventListener","event","cacheName","getPrecacheName","waitUntil","then","cachesDeleted","process","env","NODE_ENV","length","log"],"sources":["D:/github/music-pwa-frontend/node_modules/workbox-precaching/cleanupOutdatedCaches.js"],"sourcesContent":["/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\r\nimport './_version.js';\r\n/**\r\n * Adds an `activate` event listener which will clean up incompatible\r\n * precaches that were created by older versions of Workbox.\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nfunction cleanupOutdatedCaches() {\r\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n    self.addEventListener('activate', ((event) => {\r\n        const cacheName = cacheNames.getPrecacheName();\r\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (cachesDeleted.length > 0) {\r\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\r\n                        `automatically:`, cachesDeleted);\r\n                }\r\n            }\r\n        }));\r\n    }));\r\n}\r\nexport { cleanupOutdatedCaches };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,qCAAqC;AAChE,SAASC,MAAM,QAAQ,iCAAiC;AACxD,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqB,GAAG;EAC7B;EACAC,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAG,UAACC,KAAK,EAAK;IAC1C,IAAMC,SAAS,GAAGP,UAAU,CAACQ,eAAe,EAAE;IAC9CF,KAAK,CAACG,SAAS,CAACP,oBAAoB,CAACK,SAAS,CAAC,CAACG,IAAI,CAAC,UAACC,aAAa,EAAK;MACpE,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACvC,IAAIH,aAAa,CAACI,MAAM,GAAG,CAAC,EAAE;UAC1Bd,MAAM,CAACe,GAAG,CAAC,yEACS,EAAEL,aAAa,CAAC;QACxC;MACJ;IACJ,CAAC,CAAC,CAAC;EACP,CAAC,CAAE;AACP;AACA,SAASR,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}