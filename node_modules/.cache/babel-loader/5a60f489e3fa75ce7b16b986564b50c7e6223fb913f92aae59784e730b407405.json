{"ast":null,"code":"import _createClass from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport '../_version.js';\n/**\r\n * The Deferred class composes Promises in a way that allows for them to be\r\n * resolved or rejected from outside the constructor. In most cases promises\r\n * should be used directly, but Deferreds can be necessary when the logic to\r\n * resolve a promise must be separate.\r\n *\r\n * @private\r\n */\nvar Deferred = /*#__PURE__*/_createClass(\n/**\r\n * Creates a promise and exposes its resolve and reject functions as methods.\r\n */\nfunction Deferred() {\n  var _this = this;\n  _classCallCheck(this, Deferred);\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = resolve;\n    _this.reject = reject;\n  });\n});\nexport { Deferred };","map":{"version":3,"names":["Deferred","promise","Promise","resolve","reject"],"sources":["D:/github/music-pwa-frontend/node_modules/workbox-core/_private/Deferred.js"],"sourcesContent":["/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * The Deferred class composes Promises in a way that allows for them to be\r\n * resolved or rejected from outside the constructor. In most cases promises\r\n * should be used directly, but Deferreds can be necessary when the logic to\r\n * resolve a promise must be separate.\r\n *\r\n * @private\r\n */\r\nclass Deferred {\r\n    /**\r\n     * Creates a promise and exposes its resolve and reject functions as methods.\r\n     */\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n}\r\nexport { Deferred };\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMA,QAAQ;AACV;AACJ;AACA;AACI,oBAAc;EAAA;EAAA;EACV,IAAI,CAACC,OAAO,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IAC5C,KAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,KAAI,CAACC,MAAM,GAAGA,MAAM;EACxB,CAAC,CAAC;AACN,CAAC;AAEL,SAASJ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}