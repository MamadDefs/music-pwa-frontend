{"ast":null,"code":"import _classCallCheck from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\r\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\r\n * The \"match\" callback determine if a route should be used to \"handle\" a\r\n * request by returning a non-falsy value if it can. The \"handler\" callback\r\n * is called when there is a match and should return a Promise that resolves\r\n * to a `Response`.\r\n *\r\n * @memberof workbox-routing\r\n */\nvar Route = /*#__PURE__*/function () {\n  /**\r\n   * Constructor for Route class.\r\n   *\r\n   * @param {workbox-routing~matchCallback} match\r\n   * A callback function that determines whether the route matches a given\r\n   * `fetch` event by returning a non-falsy value.\r\n   * @param {workbox-routing~handlerCallback} handler A callback\r\n   * function that returns a Promise resolving to a Response.\r\n   * @param {string} [method='GET'] The HTTP method to match the Route\r\n   * against.\r\n   */\n  function Route(match, handler) {\n    var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultMethod;\n    _classCallCheck(this, Route);\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isType(match, 'function', {\n        moduleName: 'workbox-routing',\n        className: 'Route',\n        funcName: 'constructor',\n        paramName: 'match'\n      });\n      if (method) {\n        assert.isOneOf(method, validMethods, {\n          paramName: 'method'\n        });\n      }\n    }\n    // These values are referenced directly by Router so cannot be\n    // altered by minificaton.\n    this.handler = normalizeHandler(handler);\n    this.match = match;\n    this.method = method;\n  }\n  /**\r\n   *\r\n   * @param {workbox-routing-handlerCallback} handler A callback\r\n   * function that returns a Promise resolving to a Response\r\n   */\n  _createClass(Route, [{\n    key: \"setCatchHandler\",\n    value: function setCatchHandler(handler) {\n      this.catchHandler = normalizeHandler(handler);\n    }\n  }]);\n  return Route;\n}();\nexport { Route };","map":{"version":3,"names":["assert","defaultMethod","validMethods","normalizeHandler","Route","match","handler","method","process","env","NODE_ENV","isType","moduleName","className","funcName","paramName","isOneOf","catchHandler"],"sources":["D:/github/music-pwa-frontend/node_modules/workbox-routing/Route.js"],"sourcesContent":["/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { defaultMethod, validMethods } from './utils/constants.js';\r\nimport { normalizeHandler } from './utils/normalizeHandler.js';\r\nimport './_version.js';\r\n/**\r\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\r\n * The \"match\" callback determine if a route should be used to \"handle\" a\r\n * request by returning a non-falsy value if it can. The \"handler\" callback\r\n * is called when there is a match and should return a Promise that resolves\r\n * to a `Response`.\r\n *\r\n * @memberof workbox-routing\r\n */\r\nclass Route {\r\n    /**\r\n     * Constructor for Route class.\r\n     *\r\n     * @param {workbox-routing~matchCallback} match\r\n     * A callback function that determines whether the route matches a given\r\n     * `fetch` event by returning a non-falsy value.\r\n     * @param {workbox-routing~handlerCallback} handler A callback\r\n     * function that returns a Promise resolving to a Response.\r\n     * @param {string} [method='GET'] The HTTP method to match the Route\r\n     * against.\r\n     */\r\n    constructor(match, handler, method = defaultMethod) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isType(match, 'function', {\r\n                moduleName: 'workbox-routing',\r\n                className: 'Route',\r\n                funcName: 'constructor',\r\n                paramName: 'match',\r\n            });\r\n            if (method) {\r\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\r\n            }\r\n        }\r\n        // These values are referenced directly by Router so cannot be\r\n        // altered by minificaton.\r\n        this.handler = normalizeHandler(handler);\r\n        this.match = match;\r\n        this.method = method;\r\n    }\r\n    /**\r\n     *\r\n     * @param {workbox-routing-handlerCallback} handler A callback\r\n     * function that returns a Promise resolving to a Response\r\n     */\r\n    setCatchHandler(handler) {\r\n        this.catchHandler = normalizeHandler(handler);\r\n    }\r\n}\r\nexport { Route };\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,iCAAiC;AACxD,SAASC,aAAa,EAAEC,YAAY,QAAQ,sBAAsB;AAClE,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMC,KAAK;EACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,eAAYC,KAAK,EAAEC,OAAO,EAA0B;IAAA,IAAxBC,MAAM,uEAAGN,aAAa;IAAA;IAC9C,IAAIO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCV,MAAM,CAACW,MAAM,CAACN,KAAK,EAAE,UAAU,EAAE;QAC7BO,UAAU,EAAE,iBAAiB;QAC7BC,SAAS,EAAE,OAAO;QAClBC,QAAQ,EAAE,aAAa;QACvBC,SAAS,EAAE;MACf,CAAC,CAAC;MACF,IAAIR,MAAM,EAAE;QACRP,MAAM,CAACgB,OAAO,CAACT,MAAM,EAAEL,YAAY,EAAE;UAAEa,SAAS,EAAE;QAAS,CAAC,CAAC;MACjE;IACJ;IACA;IACA;IACA,IAAI,CAACT,OAAO,GAAGH,gBAAgB,CAACG,OAAO,CAAC;IACxC,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,yBAAgBD,OAAO,EAAE;MACrB,IAAI,CAACW,YAAY,GAAGd,gBAAgB,CAACG,OAAO,CAAC;IACjD;EAAC;EAAA;AAAA;AAEL,SAASF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}