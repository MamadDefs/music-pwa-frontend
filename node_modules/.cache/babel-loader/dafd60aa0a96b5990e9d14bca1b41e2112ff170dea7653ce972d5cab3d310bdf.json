{"ast":null,"code":"var _jsxFileName = \"/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/pages/SinglePlayList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ShareRoundedIcon from '@mui/icons-material/ShareRounded';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\nconst SinglePlayList = _ref => {\n  _s();\n  let {\n    setMusicInfo,\n    data,\n    setData\n  } = _ref;\n  const param = useParams();\n  const [playlistDetail, setPlaylistDetail] = useState();\n  function getCurrentURL() {\n    return window.location.href;\n  }\n  useEffect(() => {\n    const option = {\n      method: 'POST',\n      body: JSON.stringify({\n        id: param === null || param === void 0 ? void 0 : param['*']\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    };\n    fetch('https://music-pwa-api.iran.liara.run/api/playlists/id/id', option).then(res => res.json()).then(d => {\n      setPlaylistDetail({\n        title: d === null || d === void 0 ? void 0 : d.title,\n        user: d === null || d === void 0 ? void 0 : d.user\n      });\n      setData(d === null || d === void 0 ? void 0 : d.musics);\n    });\n  }, []);\n  const copyToTheClipboard = () => {\n    navigator.clipboard.writeText(getCurrentURL()).then(function () {\n      console.log('Async: Copying to clipboard was successful!');\n    }, function (err) {\n      console.error('Async: Could not copy text: ', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content-holder\",\n    style: {\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: messageType,\n        sx: {\n          position: 'absolute',\n          bottom: '0%',\n          right: '0%',\n          zIndex: 100\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"plylist-section-title\",\n      children: [/*#__PURE__*/_jsxDEV(ShareRoundedIcon, {\n        onClick: () => copyToTheClipboard()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 51\n      }, this), playlistDetail === null || playlistDetail === void 0 ? void 0 : playlistDetail.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-section\",\n      children: data === null || data === void 0 ? void 0 : data.map((q, index) => {\n        var _q$artist;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: q === null || q === void 0 ? void 0 : q.coverImagePath,\n            alt: \"\",\n            onClick: () => setMusicInfo(q),\n            className: \"song-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"song-name\",\n            children: q === null || q === void 0 ? void 0 : q.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"artist-name\",\n            children: q === null || q === void 0 ? void 0 : (_q$artist = q.artist) === null || _q$artist === void 0 ? void 0 : _q$artist.map(r => {\n              return r + \" \";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(SinglePlayList, \"vcHzkMrJiHrfWkIAkRwdlMoHnlk=\", false, function () {\n  return [useParams];\n});\n_c3 = SinglePlayList;\nexport default SinglePlayList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"SinglePlayList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ShareRoundedIcon","Snackbar","MuiAlert","Stack","Alert","forwardRef","props","ref","SinglePlayList","setMusicInfo","data","setData","param","playlistDetail","setPlaylistDetail","getCurrentURL","window","location","href","option","method","body","JSON","stringify","id","headers","fetch","then","res","json","d","title","user","musics","copyToTheClipboard","navigator","clipboard","writeText","console","log","err","error","color","open","handleClose","messageType","position","bottom","right","zIndex","message","map","q","index","coverImagePath","artist","r"],"sources":["/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/pages/SinglePlayList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport ShareRoundedIcon from '@mui/icons-material/ShareRounded';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SinglePlayList = ({ setMusicInfo, data, setData }) => {\n    const param = useParams()\n    const [playlistDetail, setPlaylistDetail] = useState();\n    function getCurrentURL() {\n        return window.location.href\n    }\n\n    useEffect(() => {\n        const option = {\n            method: 'POST',\n            body: JSON.stringify({\n                id: param?.['*']\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            }\n        };\n\n        fetch('https://music-pwa-api.iran.liara.run/api/playlists/id/id', option)\n            .then((res) => res.json())\n            .then((d) => {\n                setPlaylistDetail({title:d?.title,user:d?.user});\n                setData(d?.musics);\n            })\n\n    }, [])\n\n    const copyToTheClipboard=()=>{\n    navigator.clipboard.writeText(getCurrentURL()).then(function() {\n        console.log('Async: Copying to clipboard was successful!');\n      }, function(err) {\n        console.error('Async: Could not copy text: ', err);\n      });\n    }\n\n    return (\n        <div className=\"page-content-holder\" style={{ color: 'white' }}>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={messageType} sx={{ position:'absolute',bottom:'0%',right:'0%',zIndex:100 }}>\n            {message}\n          </Alert>\n        </Snackbar>\n            <h2 className=\"plylist-section-title\"><ShareRoundedIcon onClick={()=>copyToTheClipboard()} />{playlistDetail?.title}</h2>\n            <div className=\"music-section\">\n                {data?.map((q, index) => {\n                    return (\n                        <div key={index} className=\"post\">\n                            <img src={q?.coverImagePath} alt=\"\" onClick={() => setMusicInfo(q)} className=\"song-image\" />\n                            <h3 className=\"song-name\">{q?.title}</h3>\n                            <h4 className=\"artist-name\">{q?.artist?.map(r => { return (r + \" \") })}</h4>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default SinglePlayList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}