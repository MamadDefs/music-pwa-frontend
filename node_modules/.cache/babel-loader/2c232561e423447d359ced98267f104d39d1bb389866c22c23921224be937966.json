{"ast":null,"code":"/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\r\n * Modifies the default cache names used by the Workbox packages.\r\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\r\n *\r\n * @param {Object} details\r\n * @param {Object} [details.prefix] The string to add to the beginning of\r\n *     the precache and runtime cache names.\r\n * @param {Object} [details.suffix] The string to add to the end of\r\n *     the precache and runtime cache names.\r\n * @param {Object} [details.precache] The cache name to use for precache\r\n *     caching.\r\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\r\n * @param {Object} [details.googleAnalytics] The cache name to use for\r\n *     `workbox-google-analytics` caching.\r\n *\r\n * @memberof workbox-core\r\n */\nfunction setCacheNameDetails(details) {\n  if (process.env.NODE_ENV !== 'production') {\n    Object.keys(details).forEach(function (key) {\n      assert.isType(details[key], 'string', {\n        moduleName: 'workbox-core',\n        funcName: 'setCacheNameDetails',\n        paramName: \"details.\".concat(key)\n      });\n    });\n    if ('precache' in details && details['precache'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'precache',\n        value: details['precache']\n      });\n    }\n    if ('runtime' in details && details['runtime'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'runtime',\n        value: details['runtime']\n      });\n    }\n    if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'googleAnalytics',\n        value: details['googleAnalytics']\n      });\n    }\n  }\n  cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };","map":{"version":3,"names":["assert","cacheNames","WorkboxError","setCacheNameDetails","details","process","env","NODE_ENV","Object","keys","forEach","key","isType","moduleName","funcName","paramName","length","cacheNameId","value","updateDetails"],"sources":["D:/github/music-pwa-frontend/node_modules/workbox-core/setCacheNameDetails.js"],"sourcesContent":["/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from './_private/assert.js';\r\nimport { cacheNames } from './_private/cacheNames.js';\r\nimport { WorkboxError } from './_private/WorkboxError.js';\r\nimport './_version.js';\r\n/**\r\n * Modifies the default cache names used by the Workbox packages.\r\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\r\n *\r\n * @param {Object} details\r\n * @param {Object} [details.prefix] The string to add to the beginning of\r\n *     the precache and runtime cache names.\r\n * @param {Object} [details.suffix] The string to add to the end of\r\n *     the precache and runtime cache names.\r\n * @param {Object} [details.precache] The cache name to use for precache\r\n *     caching.\r\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\r\n * @param {Object} [details.googleAnalytics] The cache name to use for\r\n *     `workbox-google-analytics` caching.\r\n *\r\n * @memberof workbox-core\r\n */\r\nfunction setCacheNameDetails(details) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        Object.keys(details).forEach((key) => {\r\n            assert.isType(details[key], 'string', {\r\n                moduleName: 'workbox-core',\r\n                funcName: 'setCacheNameDetails',\r\n                paramName: `details.${key}`,\r\n            });\r\n        });\r\n        if ('precache' in details && details['precache'].length === 0) {\r\n            throw new WorkboxError('invalid-cache-name', {\r\n                cacheNameId: 'precache',\r\n                value: details['precache'],\r\n            });\r\n        }\r\n        if ('runtime' in details && details['runtime'].length === 0) {\r\n            throw new WorkboxError('invalid-cache-name', {\r\n                cacheNameId: 'runtime',\r\n                value: details['runtime'],\r\n            });\r\n        }\r\n        if ('googleAnalytics' in details &&\r\n            details['googleAnalytics'].length === 0) {\r\n            throw new WorkboxError('invalid-cache-name', {\r\n                cacheNameId: 'googleAnalytics',\r\n                value: details['googleAnalytics'],\r\n            });\r\n        }\r\n    }\r\n    cacheNames.updateDetails(details);\r\n}\r\nexport { setCacheNameDetails };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmB,CAACC,OAAO,EAAE;EAClC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,OAAO,CAAC,UAACC,GAAG,EAAK;MAClCX,MAAM,CAACY,MAAM,CAACR,OAAO,CAACO,GAAG,CAAC,EAAE,QAAQ,EAAE;QAClCE,UAAU,EAAE,cAAc;QAC1BC,QAAQ,EAAE,qBAAqB;QAC/BC,SAAS,oBAAaJ,GAAG;MAC7B,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,UAAU,IAAIP,OAAO,IAAIA,OAAO,CAAC,UAAU,CAAC,CAACY,MAAM,KAAK,CAAC,EAAE;MAC3D,MAAM,IAAId,YAAY,CAAC,oBAAoB,EAAE;QACzCe,WAAW,EAAE,UAAU;QACvBC,KAAK,EAAEd,OAAO,CAAC,UAAU;MAC7B,CAAC,CAAC;IACN;IACA,IAAI,SAAS,IAAIA,OAAO,IAAIA,OAAO,CAAC,SAAS,CAAC,CAACY,MAAM,KAAK,CAAC,EAAE;MACzD,MAAM,IAAId,YAAY,CAAC,oBAAoB,EAAE;QACzCe,WAAW,EAAE,SAAS;QACtBC,KAAK,EAAEd,OAAO,CAAC,SAAS;MAC5B,CAAC,CAAC;IACN;IACA,IAAI,iBAAiB,IAAIA,OAAO,IAC5BA,OAAO,CAAC,iBAAiB,CAAC,CAACY,MAAM,KAAK,CAAC,EAAE;MACzC,MAAM,IAAId,YAAY,CAAC,oBAAoB,EAAE;QACzCe,WAAW,EAAE,iBAAiB;QAC9BC,KAAK,EAAEd,OAAO,CAAC,iBAAiB;MACpC,CAAC,CAAC;IACN;EACJ;EACAH,UAAU,CAACkB,aAAa,CAACf,OAAO,CAAC;AACrC;AACA,SAASD,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}