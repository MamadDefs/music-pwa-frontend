{"ast":null,"code":"var _jsxFileName = \"/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/pages/SinglePlayList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePlayList = _ref => {\n  _s();\n  let {\n    setMusicInfo,\n    data,\n    setData\n  } = _ref;\n  const param = useParams();\n  const [playlistTitle, setPlaylistTitle] = useState();\n  function getCurrentURL() {\n    return window.location.href;\n  }\n  useEffect(() => {\n    const option = {\n      method: 'POST',\n      body: JSON.stringify({\n        id: param === null || param === void 0 ? void 0 : param['*']\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    };\n    fetch('https://music-pwa-api.iran.liara.run/api/playlists/id/id', option).then(res => res.json()).then(d => {\n      setPlaylistTitle(d === null || d === void 0 ? void 0 : d.title);\n      setData(d === null || d === void 0 ? void 0 : d.musics);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content-holder\",\n    style: {\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"music-section-title\",\n      children: playlistTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-section\",\n      children: data === null || data === void 0 ? void 0 : data.map((q, index) => {\n        var _q$artist;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: q === null || q === void 0 ? void 0 : q.coverImagePath,\n            alt: \"\",\n            onClick: () => setMusicInfo(q),\n            className: \"song-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"song-name\",\n            children: q === null || q === void 0 ? void 0 : q.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"artist-name\",\n            children: q === null || q === void 0 ? void 0 : (_q$artist = q.artist) === null || _q$artist === void 0 ? void 0 : _q$artist.map(r => {\n              return r + \" \";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(SinglePlayList, \"Cla50MKzSgkdkDVi/tZloK+Jsro=\", false, function () {\n  return [useParams];\n});\n_c = SinglePlayList;\nexport default SinglePlayList;\nvar _c;\n$RefreshReg$(_c, \"SinglePlayList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","SinglePlayList","setMusicInfo","data","setData","param","playlistTitle","setPlaylistTitle","getCurrentURL","window","location","href","option","method","body","JSON","stringify","id","headers","fetch","then","res","json","d","title","musics","color","map","q","index","coverImagePath","artist","r"],"sources":["/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/pages/SinglePlayList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst SinglePlayList = ({ setMusicInfo, data, setData }) => {\n    const param = useParams()\n    const [playlistTitle, setPlaylistTitle] = useState();\n    function getCurrentURL() {\n        return window.location.href\n    }\n\n    useEffect(() => {\n        const option = {\n            method: 'POST',\n            body: JSON.stringify({\n                id: param?.['*']\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            }\n        };\n\n        fetch('https://music-pwa-api.iran.liara.run/api/playlists/id/id', option)\n            .then((res) => res.json())\n            .then((d) => {\n                setPlaylistTitle(d?.title);\n                setData(d?.musics);\n            })\n\n    }, [])\n\n\n\n    return (\n        <div className=\"page-content-holder\" style={{ color: 'white' }}>\n            <h2 className=\"music-section-title\">{playlistTitle}</h2>\n            <div className=\"music-section\">\n                {data?.map((q, index) => {\n                    return (\n                        <div key={index} className=\"post\">\n                            <img src={q?.coverImagePath} alt=\"\" onClick={() => setMusicInfo(q)} className=\"song-image\" />\n                            <h3 className=\"song-name\">{q?.title}</h3>\n                            <h4 className=\"artist-name\">{q?.artist?.map(r => { return (r + \" \") })}</h4>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default SinglePlayList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAA;AAE5C,MAAMC,cAAc,GAAG,QAAqC;EAAA;EAAA,IAApC;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAQ,CAAC;EACnD,MAAMC,KAAK,GAAGL,SAAS,EAAE;EACzB,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,EAAE;EACpD,SAASS,aAAa,GAAG;IACrB,OAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI;EAC/B;EAEAb,SAAS,CAAC,MAAM;IACZ,MAAMc,MAAM,GAAG;MACXC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,EAAE,EAAEZ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAG,GAAG;MACnB,CAAC,CAAC;MACFa,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAEDC,KAAK,CAAC,0DAA0D,EAAEP,MAAM,CAAC,CACpEQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,CAAC,IAAK;MACThB,gBAAgB,CAACgB,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC,KAAK,CAAC;MAC1BpB,OAAO,CAACmB,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE,MAAM,CAAC;IACtB,CAAC,CAAC;EAEV,CAAC,EAAE,EAAE,CAAC;EAIN,oBACI;IAAK,SAAS,EAAC,qBAAqB;IAAC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAA,wBAC3D;MAAI,SAAS,EAAC,qBAAqB;MAAA,UAAEpB;IAAa;MAAA;MAAA;MAAA;IAAA,QAAM,eACxD;MAAK,SAAS,EAAC,eAAe;MAAA,UACzBH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEwB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;QAAA;QACrB,oBACI;UAAiB,SAAS,EAAC,MAAM;UAAA,wBAC7B;YAAK,GAAG,EAAED,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE,cAAe;YAAC,GAAG,EAAC,EAAE;YAAC,OAAO,EAAE,MAAM5B,YAAY,CAAC0B,CAAC,CAAE;YAAC,SAAS,EAAC;UAAY;YAAA;YAAA;YAAA;UAAA,QAAG,eAC7F;YAAI,SAAS,EAAC,WAAW;YAAA,UAAEA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEJ;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACzC;YAAI,SAAS,EAAC,aAAa;YAAA,UAAEI,CAAC,aAADA,CAAC,oCAADA,CAAC,CAAEG,MAAM,8CAAT,UAAWJ,GAAG,CAACK,CAAC,IAAI;cAAE,OAAQA,CAAC,GAAG,GAAG;YAAE,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAHtEH,KAAK;UAAA;UAAA;UAAA;QAAA,QAIT;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA7CK5B,cAAc;EAAA,QACFD,SAAS;AAAA;AAAA,KADrBC,cAAc;AA+CpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}