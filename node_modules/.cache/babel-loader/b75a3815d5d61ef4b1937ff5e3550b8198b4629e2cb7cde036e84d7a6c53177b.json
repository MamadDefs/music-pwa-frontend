{"ast":null,"code":"/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\r\n * Helper function that calls\r\n * {@link PrecacheController#createHandlerBoundToURL} on the default\r\n * {@link PrecacheController} instance.\r\n *\r\n * If you are creating your own {@link PrecacheController}, then call the\r\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\r\n * instead of using this function.\r\n *\r\n * @param {string} url The precached URL which will be used to lookup the\r\n * `Response`.\r\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\r\n * response from the network if there's a precache miss.\r\n * @return {workbox-routing~handlerCallback}\r\n *\r\n * @memberof workbox-precaching\r\n */\nfunction createHandlerBoundToURL(url) {\n  var precacheController = getOrCreatePrecacheController();\n  return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };","map":{"version":3,"names":["getOrCreatePrecacheController","createHandlerBoundToURL","url","precacheController"],"sources":["D:/github/music-pwa-frontend/node_modules/workbox-precaching/createHandlerBoundToURL.js"],"sourcesContent":["/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\r\nimport './_version.js';\r\n/**\r\n * Helper function that calls\r\n * {@link PrecacheController#createHandlerBoundToURL} on the default\r\n * {@link PrecacheController} instance.\r\n *\r\n * If you are creating your own {@link PrecacheController}, then call the\r\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\r\n * instead of using this function.\r\n *\r\n * @param {string} url The precached URL which will be used to lookup the\r\n * `Response`.\r\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\r\n * response from the network if there's a precache miss.\r\n * @return {workbox-routing~handlerCallback}\r\n *\r\n * @memberof workbox-precaching\r\n */\r\nfunction createHandlerBoundToURL(url) {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    return precacheController.createHandlerBoundToURL(url);\r\n}\r\nexport { createHandlerBoundToURL };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,6BAA6B,QAAQ,0CAA0C;AACxF,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,uBAAuB,CAACC,GAAG,EAAE;EAClC,IAAMC,kBAAkB,GAAGH,6BAA6B,EAAE;EAC1D,OAAOG,kBAAkB,CAACF,uBAAuB,CAACC,GAAG,CAAC;AAC1D;AACA,SAASD,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}