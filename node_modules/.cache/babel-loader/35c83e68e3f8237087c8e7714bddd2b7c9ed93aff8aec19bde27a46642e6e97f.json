{"ast":null,"code":"import _regeneratorRuntime from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/github/music-pwa-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\r\n * An implementation of a\r\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\r\n * request strategy.\r\n *\r\n * This class is useful if you want to take advantage of any\r\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\r\n *\r\n * If the network request fails, this will throw a `WorkboxError` exception.\r\n *\r\n * @extends workbox-strategies.Strategy\r\n * @memberof workbox-strategies\r\n */\nvar NetworkOnly = /*#__PURE__*/function (_Strategy) {\n  _inherits(NetworkOnly, _Strategy);\n  var _super = _createSuper(NetworkOnly);\n  /**\r\n   * @param {Object} [options]\r\n   * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\r\n   * to use in conjunction with this caching strategy.\r\n   * @param {Object} [options.fetchOptions] Values passed along to the\r\n   * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\r\n   * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\r\n   * `fetch()` requests made by this strategy.\r\n   * @param {number} [options.networkTimeoutSeconds] If set, any network requests\r\n   * that fail to respond within the timeout will result in a network error.\r\n   */\n  function NetworkOnly() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, NetworkOnly);\n    _this = _super.call(this, options);\n    _this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    return _this;\n  }\n  /**\r\n   * @private\r\n   * @param {Request|string} request A request to run this strategy for.\r\n   * @param {workbox-strategies.StrategyHandler} handler The event that\r\n   *     triggered the request.\r\n   * @return {Promise<Response>}\r\n   */\n  _createClass(NetworkOnly, [{\n    key: \"_handle\",\n    value: function () {\n      var _handle2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request, handler) {\n        var error, response, promises, timeoutPromise;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (process.env.NODE_ENV !== 'production') {\n                assert.isInstance(request, Request, {\n                  moduleName: 'workbox-strategies',\n                  className: this.constructor.name,\n                  funcName: '_handle',\n                  paramName: 'request'\n                });\n              }\n              error = undefined;\n              _context.prev = 2;\n              promises = [handler.fetch(request)];\n              if (this._networkTimeoutSeconds) {\n                timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n              }\n              _context.next = 7;\n              return Promise.race(promises);\n            case 7:\n              response = _context.sent;\n              if (response) {\n                _context.next = 10;\n                break;\n              }\n              throw new Error(\"Timed out the network response after \" + \"\".concat(this._networkTimeoutSeconds, \" seconds.\"));\n            case 10:\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              if (_context.t0 instanceof Error) {\n                error = _context.t0;\n              }\n            case 15:\n              if (process.env.NODE_ENV !== 'production') {\n                logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n                if (response) {\n                  logger.log(\"Got response from network.\");\n                } else {\n                  logger.log(\"Unable to get a response from the network.\");\n                }\n                messages.printFinalResponse(response);\n                logger.groupEnd();\n              }\n              if (response) {\n                _context.next = 18;\n                break;\n              }\n              throw new WorkboxError('no-response', {\n                url: request.url,\n                error: error\n              });\n            case 18:\n              return _context.abrupt(\"return\", response);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 12]]);\n      }));\n      function _handle(_x, _x2) {\n        return _handle2.apply(this, arguments);\n      }\n      return _handle;\n    }()\n  }]);\n  return NetworkOnly;\n}(Strategy);\nexport { NetworkOnly };","map":{"version":3,"names":["assert","logger","timeout","WorkboxError","Strategy","messages","NetworkOnly","options","_networkTimeoutSeconds","networkTimeoutSeconds","request","handler","process","env","NODE_ENV","isInstance","Request","moduleName","className","constructor","name","funcName","paramName","error","undefined","promises","fetch","timeoutPromise","push","Promise","race","response","Error","groupCollapsed","strategyStart","log","printFinalResponse","groupEnd","url"],"sources":["D:/github/music-pwa-frontend/node_modules/workbox-strategies/NetworkOnly.js"],"sourcesContent":["/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { timeout } from 'workbox-core/_private/timeout.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport { Strategy } from './Strategy.js';\r\nimport { messages } from './utils/messages.js';\r\nimport './_version.js';\r\n/**\r\n * An implementation of a\r\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\r\n * request strategy.\r\n *\r\n * This class is useful if you want to take advantage of any\r\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\r\n *\r\n * If the network request fails, this will throw a `WorkboxError` exception.\r\n *\r\n * @extends workbox-strategies.Strategy\r\n * @memberof workbox-strategies\r\n */\r\nclass NetworkOnly extends Strategy {\r\n    /**\r\n     * @param {Object} [options]\r\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\r\n     * to use in conjunction with this caching strategy.\r\n     * @param {Object} [options.fetchOptions] Values passed along to the\r\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\r\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\r\n     * `fetch()` requests made by this strategy.\r\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\r\n     * that fail to respond within the timeout will result in a network error.\r\n     */\r\n    constructor(options = {}) {\r\n        super(options);\r\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {Request|string} request A request to run this strategy for.\r\n     * @param {workbox-strategies.StrategyHandler} handler The event that\r\n     *     triggered the request.\r\n     * @return {Promise<Response>}\r\n     */\r\n    async _handle(request, handler) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isInstance(request, Request, {\r\n                moduleName: 'workbox-strategies',\r\n                className: this.constructor.name,\r\n                funcName: '_handle',\r\n                paramName: 'request',\r\n            });\r\n        }\r\n        let error = undefined;\r\n        let response;\r\n        try {\r\n            const promises = [\r\n                handler.fetch(request),\r\n            ];\r\n            if (this._networkTimeoutSeconds) {\r\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\r\n                promises.push(timeoutPromise);\r\n            }\r\n            response = await Promise.race(promises);\r\n            if (!response) {\r\n                throw new Error(`Timed out the network response after ` +\r\n                    `${this._networkTimeoutSeconds} seconds.`);\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err instanceof Error) {\r\n                error = err;\r\n            }\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\r\n            if (response) {\r\n                logger.log(`Got response from network.`);\r\n            }\r\n            else {\r\n                logger.log(`Unable to get a response from the network.`);\r\n            }\r\n            messages.printFinalResponse(response);\r\n            logger.groupEnd();\r\n        }\r\n        if (!response) {\r\n            throw new WorkboxError('no-response', { url: request.url, error });\r\n        }\r\n        return response;\r\n    }\r\n}\r\nexport { NetworkOnly };\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,iCAAiC;AACxD,SAASC,MAAM,QAAQ,iCAAiC;AACxD,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaMC,WAAW;EAAA;EAAA;EACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,uBAA0B;IAAA;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAA;IACpB,0BAAMA,OAAO;IACb,MAAKC,sBAAsB,GAAGD,OAAO,CAACE,qBAAqB,IAAI,CAAC;IAAC;EACrE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA;MAAA,0EAOA,iBAAcC,OAAO,EAAEC,OAAO;QAAA;QAAA;UAAA;YAAA;cAC1B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;gBACvCd,MAAM,CAACe,UAAU,CAACL,OAAO,EAAEM,OAAO,EAAE;kBAChCC,UAAU,EAAE,oBAAoB;kBAChCC,SAAS,EAAE,IAAI,CAACC,WAAW,CAACC,IAAI;kBAChCC,QAAQ,EAAE,SAAS;kBACnBC,SAAS,EAAE;gBACf,CAAC,CAAC;cACN;cACIC,KAAK,GAAGC,SAAS;cAAA;cAGXC,QAAQ,GAAG,CACbd,OAAO,CAACe,KAAK,CAAChB,OAAO,CAAC,CACzB;cACD,IAAI,IAAI,CAACF,sBAAsB,EAAE;gBACvBmB,cAAc,GAAGzB,OAAO,CAAC,IAAI,CAACM,sBAAsB,GAAG,IAAI,CAAC;gBAClEiB,QAAQ,CAACG,IAAI,CAACD,cAAc,CAAC;cACjC;cAAC;cAAA,OACgBE,OAAO,CAACC,IAAI,CAACL,QAAQ,CAAC;YAAA;cAAvCM,QAAQ;cAAA,IACHA,QAAQ;gBAAA;gBAAA;cAAA;cAAA,MACH,IAAIC,KAAK,CAAC,oDACT,IAAI,CAACxB,sBAAsB,cAAW,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAIlD,IAAI,uBAAewB,KAAK,EAAE;gBACtBT,KAAK,cAAM;cACf;YAAC;cAEL,IAAIX,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;gBACvCb,MAAM,CAACgC,cAAc,CAAC5B,QAAQ,CAAC6B,aAAa,CAAC,IAAI,CAACf,WAAW,CAACC,IAAI,EAAEV,OAAO,CAAC,CAAC;gBAC7E,IAAIqB,QAAQ,EAAE;kBACV9B,MAAM,CAACkC,GAAG,8BAA8B;gBAC5C,CAAC,MACI;kBACDlC,MAAM,CAACkC,GAAG,8CAA8C;gBAC5D;gBACA9B,QAAQ,CAAC+B,kBAAkB,CAACL,QAAQ,CAAC;gBACrC9B,MAAM,CAACoC,QAAQ,EAAE;cACrB;cAAC,IACIN,QAAQ;gBAAA;gBAAA;cAAA;cAAA,MACH,IAAI5B,YAAY,CAAC,aAAa,EAAE;gBAAEmC,GAAG,EAAE5B,OAAO,CAAC4B,GAAG;gBAAEf,KAAK,EAALA;cAAM,CAAC,CAAC;YAAA;cAAA,iCAE/DQ,QAAQ;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAClB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EApEqB3B,QAAQ;AAsElC,SAASE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}