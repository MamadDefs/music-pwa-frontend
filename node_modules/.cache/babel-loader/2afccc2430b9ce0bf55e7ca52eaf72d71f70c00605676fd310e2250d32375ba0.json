{"ast":null,"code":"var _jsxFileName = \"/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/componenets/MusicPlayer/MusicPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useSound from 'use-sound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = _ref => {\n  _s();\n  let {\n    musicInfo\n  } = _ref;\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [play, {\n    pause,\n    stop,\n    duration,\n    sound\n  }] = useSound(musicInfo === null || musicInfo === void 0 ? void 0 : musicInfo.musicPath);\n  const [currTime, setCurrTime] = useState({\n    min: \"\",\n    sec: \"\"\n  });\n  const [seconds, setSeconds] = useState();\n  useEffect(() => {\n    // stop();\n    play();\n    const sec = duration / 1000;\n    const min = Math.floor(sec / 60);\n    const secRemain = Math.floor(sec % 60);\n    const time = {\n      min: min,\n      sec: secRemain\n    };\n    console.log(time);\n  }, [musicInfo]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (sound) {\n        setSeconds(sound.seek([]));\n        const min = Math.floor(sound.seek([]) / 60);\n        const sec = Math.floor(sound.seek([]) % 60);\n        setCurrTime({\n          min,\n          sec\n        });\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [sound]);\n  const playingButton = () => {\n    if (isPlaying) {\n      pause(); // this will pause the audio\n      setIsPlaying(false);\n    } else {\n      play(); // this will play the audio\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: playingButton,\n      style: {\n        color: 'white'\n      },\n      children: [\"play---\", seconds, \"--\", currTime.min, \":\", currTime.sec]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"JwOkhkBy0eFzjKudFN6UzdPH9ck=\", false, function () {\n  return [useSound];\n});\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useSound","MusicPlayer","musicInfo","isPlaying","setIsPlaying","play","pause","stop","duration","sound","musicPath","currTime","setCurrTime","min","sec","seconds","setSeconds","Math","floor","secRemain","time","console","log","interval","setInterval","seek","clearInterval","playingButton","color"],"sources":["/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/componenets/MusicPlayer/MusicPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useSound from 'use-sound'\n\nconst MusicPlayer = ({ musicInfo }) => {\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [play, { pause, stop, duration, sound }] = useSound(musicInfo?.musicPath);\n\n  const [currTime, setCurrTime] = useState({\n    min: \"\",\n    sec: \"\",\n  });\n\n  const [seconds, setSeconds] = useState();\n\n  useEffect(() => {\n    // stop();\n    play()\n    const sec = duration / 1000;\n    const min = Math.floor(sec / 60);\n    const secRemain = Math.floor(sec % 60);\n    const time = {\n      min: min,\n      sec: secRemain\n    };\n    console.log(time)\n  }, [musicInfo])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (sound) {\n        setSeconds(sound.seek([]));\n        const min = Math.floor(sound.seek([]) / 60);\n        const sec = Math.floor(sound.seek([]) % 60);\n        setCurrTime({\n          min,\n          sec,\n        });\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [sound]);\n\n  const playingButton = () => {\n    if (isPlaying) {\n      pause(); // this will pause the audio\n      setIsPlaying(false);\n    } else {\n      play(); // this will play the audio\n      setIsPlaying(true);\n    }\n  };\n  return (\n    <div>\n      <p onClick={playingButton} style={{ color: 'white' }}>play---{seconds}--{currTime.min}:{currTime.sec}</p>\n      {/* {<audio src={musicInfo?.musicPath} autoPlay={true}/>} */}\n    </div>\n  )\n}\n\nexport default MusicPlayer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAAA;AAEhC,MAAMC,WAAW,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EAEhC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,IAAI,EAAE;IAAEC,KAAK;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAM,CAAC,CAAC,GAAGT,QAAQ,CAACE,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEQ,SAAS,CAAC;EAE/E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC;IACvCe,GAAG,EAAE,EAAE;IACPC,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,EAAE;EAExCC,SAAS,CAAC,MAAM;IACd;IACAM,IAAI,EAAE;IACN,MAAMS,GAAG,GAAGN,QAAQ,GAAG,IAAI;IAC3B,MAAMK,GAAG,GAAGI,IAAI,CAACC,KAAK,CAACJ,GAAG,GAAG,EAAE,CAAC;IAChC,MAAMK,SAAS,GAAGF,IAAI,CAACC,KAAK,CAACJ,GAAG,GAAG,EAAE,CAAC;IACtC,MAAMM,IAAI,GAAG;MACXP,GAAG,EAAEA,GAAG;MACRC,GAAG,EAAEK;IACP,CAAC;IACDE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EAEfH,SAAS,CAAC,MAAM;IACd,MAAMwB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIf,KAAK,EAAE;QACTO,UAAU,CAACP,KAAK,CAACgB,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAMZ,GAAG,GAAGI,IAAI,CAACC,KAAK,CAACT,KAAK,CAACgB,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAC3C,MAAMX,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACT,KAAK,CAACgB,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAC3Cb,WAAW,CAAC;UACVC,GAAG;UACHC;QACF,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMY,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEX,MAAMkB,aAAa,GAAG,MAAM;IAC1B,IAAIxB,SAAS,EAAE;MACbG,KAAK,EAAE,CAAC,CAAC;MACTF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLC,IAAI,EAAE,CAAC,CAAC;MACRD,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EACD,oBACE;IAAA,uBACE;MAAG,OAAO,EAAEuB,aAAc;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAA,WAAC,SAAO,EAACb,OAAO,EAAC,IAAE,EAACJ,QAAQ,CAACE,GAAG,EAAC,GAAC,EAACF,QAAQ,CAACG,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QAErG;AAEV,CAAC;AAAA,GAvDKb,WAAW;EAAA,QAGkCD,QAAQ;AAAA;AAAA,KAHrDC,WAAW;AAyDjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}