{"ast":null,"code":"var _jsxFileName = \"/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/componenets/MusicPlayer/MusicPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PlayArrowRoundsedIcon from '@mui/icons-material/PlayArrowRounded';\nimport StopRoundedIcon from '@mui/icons-material/StopRounded';\nimport SkipPreviousRoundedIcon from '@mui/icons-material/SkipPreviousRounded';\nimport SkipNextRoundedIcon from '@mui/icons-material/SkipNextRounded';\nimport CloseFullscreenRoundedIcon from '@mui/icons-material/CloseFullscreenRounded';\nimport OpenInBrowserRoundedIcon from '@mui/icons-material/OpenInBrowserRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = _ref => {\n  _s();\n  let {\n    musicInfo\n  } = _ref;\n  const [isMaximize, setIsMaximize] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [progress, setProgress] = useState(0);\n  const play = () => {\n    document.getElementById('musicPlayer').play();\n  };\n  const pause = () => {\n    document.getElementById('musicPlayer').pause();\n  };\n  const playingButton = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      pause();\n    } else {\n      setIsPlaying(true);\n      play();\n    }\n  };\n  const changeProgress = e => {\n    const currentTime = document.getElementById('musicPlayer').currentTime;\n    const duration = document.getElementById('musicPlayer').duration;\n    setProgress(parseInt(currentTime / duration * 100));\n    console.log(progress);\n  };\n  const changeValue = e => {\n    const duration = document.getElementById('musicPlayer').duration;\n    document.getElementById('musicPlayer').currentTime = e.target.value / 100 * duration;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"musicPlayerHolder\",\n    children: [isMaximize ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minimize-btn\",\n      children: /*#__PURE__*/_jsxDEV(CloseFullscreenRoundedIcon, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maximize-btn\",\n      children: /*#__PURE__*/_jsxDEV(OpenInBrowserRoundedIcon, {\n        sx: {\n          fontSize: 25\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicPlayerInnerHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: isPlaying ? 'musicPlayerImagePlaying' : 'musicPlayerImage',\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: musicInfo === null || musicInfo === void 0 ? void 0 : musicInfo.coverImagePath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"musicPlayerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: musicInfo === null || musicInfo === void 0 ? void 0 : musicInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: musicInfo === null || musicInfo === void 0 ? void 0 : musicInfo.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"musicPlayerProgress\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: 1,\n          max: 100,\n          className: \"range\",\n          value: progress,\n          onChange: e => changeValue(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"musicPlayerControler\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playingButton\",\n          children: [/*#__PURE__*/_jsxDEV(SkipNextRoundedIcon, {\n            sx: sx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(PlayArrowRoundsedIcon, {\n            sx: sx,\n            onClick: playingButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(StopRoundedIcon, {\n            sx: sx,\n            onClick: playingButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(SkipPreviousRoundedIcon, {\n            sx: sx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"musicPlayer\",\n          onTimeUpdate: e => changeProgress(e),\n          src: musicInfo === null || musicInfo === void 0 ? void 0 : musicInfo.musicPath,\n          autoPlay: true,\n          controls: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"ke94oYqnbwxO+xiuYZzfinRfXFo=\");\n_c = MusicPlayer;\nlet sx = {\n  fontSize: 50\n};\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","PlayArrowRoundsedIcon","StopRoundedIcon","SkipPreviousRoundedIcon","SkipNextRoundedIcon","CloseFullscreenRoundedIcon","OpenInBrowserRoundedIcon","MusicPlayer","musicInfo","isMaximize","setIsMaximize","isPlaying","setIsPlaying","progress","setProgress","play","document","getElementById","pause","playingButton","changeProgress","e","currentTime","duration","parseInt","console","log","changeValue","target","value","fontSize","coverImagePath","title","artist","sx","musicPath"],"sources":["/home/saoshyant/Documents/GitHub/music-pwa-frontend/src/componenets/MusicPlayer/MusicPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PlayArrowRoundsedIcon from '@mui/icons-material/PlayArrowRounded';\nimport StopRoundedIcon from '@mui/icons-material/StopRounded';\nimport SkipPreviousRoundedIcon from '@mui/icons-material/SkipPreviousRounded';\nimport SkipNextRoundedIcon from '@mui/icons-material/SkipNextRounded';\nimport CloseFullscreenRoundedIcon from '@mui/icons-material/CloseFullscreenRounded';\nimport OpenInBrowserRoundedIcon from '@mui/icons-material/OpenInBrowserRounded';\n\nconst MusicPlayer = ({ musicInfo }) => {\n\n  const [isMaximize,setIsMaximize]=useState(true);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [progress, setProgress] = useState(0);\n\n  const play = () => {\n    document.getElementById('musicPlayer').play()\n  }\n\n  const pause = () => {\n    document.getElementById('musicPlayer').pause()\n  }\n\n  const playingButton = () => {\n\n\n    if (isPlaying) {\n      setIsPlaying(false);\n      pause();\n    } else {\n      setIsPlaying(true);\n      play();\n    }\n  }\n\n  const changeProgress = (e) => {\n    const currentTime  = document.getElementById('musicPlayer').currentTime;\n    const duration = document.getElementById('musicPlayer').duration;\n\n    setProgress(parseInt((currentTime / duration) * 100))\n    console.log(progress)\n  }\n\n  const changeValue=(e)=>{\n    const duration = document.getElementById('musicPlayer').duration;\n    document.getElementById('musicPlayer').currentTime=e.target.value/100*duration;\n  }\n\n  return (\n    <div className='musicPlayerHolder'>\n      { isMaximize\n        ?\n        <div className='minimize-btn'>\n            <CloseFullscreenRoundedIcon sx={{fontSize:30}} />\n        </div>\n        :\n        <div className='maximize-btn' >\n          <OpenInBrowserRoundedIcon sx={{fontSize:25}} />\n        </div>}\n      <div className='musicPlayerInnerHolder'>\n        \n        <div className={isPlaying ? 'musicPlayerImagePlaying' : 'musicPlayerImage'}>\n          <img src={musicInfo?.coverImagePath} />\n        </div>\n        <div className='musicPlayerInfo'>\n          <h2>{musicInfo?.title}</h2>\n          <h3>{musicInfo?.artist}</h3>\n        </div>\n        <div className='musicPlayerProgress'>\n          <input type='range' min={1} max={100} className='range' value={progress} onChange={(e)=>changeValue(e)}  />\n        </div>\n        <div className='musicPlayerControler' >\n          <div className='playingButton'>\n            <SkipNextRoundedIcon sx={sx} />\n            {!isPlaying ? \n            <PlayArrowRoundsedIcon sx={sx} onClick={playingButton} /> :\n             <StopRoundedIcon sx={sx} onClick={playingButton} />}\n             <SkipPreviousRoundedIcon sx={sx} />\n          </div>\n          <audio id=\"musicPlayer\" onTimeUpdate={(e) => changeProgress(e)} src={musicInfo?.musicPath} autoPlay={true} controls={false} />\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nlet sx={fontSize:50}\n\nexport default MusicPlayer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,qBAAqB,MAAM,sCAAsC;AACxE,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,uBAAuB,MAAM,yCAAyC;AAC7E,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,0BAA0B,MAAM,4CAA4C;AACnF,OAAOC,wBAAwB,MAAM,0CAA0C;AAAC;AAEhF,MAAMC,WAAW,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EAEhC,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMgB,IAAI,GAAG,MAAM;IACjBC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACF,IAAI,EAAE;EAC/C,CAAC;EAED,MAAMG,KAAK,GAAG,MAAM;IAClBF,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK,EAAE;EAChD,CAAC;EAED,MAAMC,aAAa,GAAG,MAAM;IAG1B,IAAIR,SAAS,EAAE;MACbC,YAAY,CAAC,KAAK,CAAC;MACnBM,KAAK,EAAE;IACT,CAAC,MAAM;MACLN,YAAY,CAAC,IAAI,CAAC;MAClBG,IAAI,EAAE;IACR;EACF,CAAC;EAED,MAAMK,cAAc,GAAIC,CAAC,IAAK;IAC5B,MAAMC,WAAW,GAAIN,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACK,WAAW;IACvE,MAAMC,QAAQ,GAAGP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACM,QAAQ;IAEhET,WAAW,CAACU,QAAQ,CAAEF,WAAW,GAAGC,QAAQ,GAAI,GAAG,CAAC,CAAC;IACrDE,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMc,WAAW,GAAEN,CAAC,IAAG;IACrB,MAAME,QAAQ,GAAGP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACM,QAAQ;IAChEP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACK,WAAW,GAACD,CAAC,CAACO,MAAM,CAACC,KAAK,GAAC,GAAG,GAACN,QAAQ;EAChF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,WAC9Bd,UAAU,gBAEV;MAAK,SAAS,EAAC,cAAc;MAAA,uBACzB,QAAC,0BAA0B;QAAC,EAAE,EAAE;UAACqB,QAAQ,EAAC;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC/C,gBAEN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B,QAAC,wBAAwB;QAAC,EAAE,EAAE;UAACA,QAAQ,EAAC;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3C,eACR;MAAK,SAAS,EAAC,wBAAwB;MAAA,wBAErC;QAAK,SAAS,EAAEnB,SAAS,GAAG,yBAAyB,GAAG,kBAAmB;QAAA,uBACzE;UAAK,GAAG,EAAEH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEuB;QAAe;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACnC,eACN;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAA,UAAKvB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAC3B;UAAA,UAAKxB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEyB;QAAM;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACxB,eACN;QAAK,SAAS,EAAC,qBAAqB;QAAA,uBAClC;UAAO,IAAI,EAAC,OAAO;UAAC,GAAG,EAAE,CAAE;UAAC,GAAG,EAAE,GAAI;UAAC,SAAS,EAAC,OAAO;UAAC,KAAK,EAAEpB,QAAS;UAAC,QAAQ,EAAGQ,CAAC,IAAGM,WAAW,CAACN,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACvG,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAK,SAAS,EAAC,eAAe;UAAA,wBAC5B,QAAC,mBAAmB;YAAC,EAAE,EAAEa;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG,EAC9B,CAACvB,SAAS,gBACX,QAAC,qBAAqB;YAAC,EAAE,EAAEuB,EAAG;YAAC,OAAO,EAAEf;UAAc;YAAA;YAAA;YAAA;UAAA,QAAG,gBACxD,QAAC,eAAe;YAAC,EAAE,EAAEe,EAAG;YAAC,OAAO,EAAEf;UAAc;YAAA;YAAA;YAAA;UAAA,QAAG,eACnD,QAAC,uBAAuB;YAAC,EAAE,EAAEe;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAChC,eACN;UAAO,EAAE,EAAC,aAAa;UAAC,YAAY,EAAGb,CAAC,IAAKD,cAAc,CAACC,CAAC,CAAE;UAAC,GAAG,EAAEb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE2B,SAAU;UAAC,QAAQ,EAAE,IAAK;UAAC,QAAQ,EAAE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1H;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GA5EK5B,WAAW;AAAA,KAAXA,WAAW;AA8EjB,IAAI2B,EAAE,GAAC;EAACJ,QAAQ,EAAC;AAAE,CAAC;AAEpB,eAAevB,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}